name: CI

on: [push, pull_request, workflow_dispatch]

env:
  CXXFLAGS: "-Wall -Wextra -Wno-unused-parameter"

jobs:
  build:
    name: Build
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        orocos_build_type: [Debug, Release]
        compiler: [gcc, clang]
        python_version: ['3.8']
        include:
          - os: ubuntu-20.04
            orocos_build_type: Release
            compiler: gcc
            python_version: '3.9'
          - os: ubuntu-20.04
            orocos_build_type: Release
            compiler: gcc
            python_version: '3.10'
    env:
      CC: ${{ matrix.compiler }}
      OROCOS_BUILD_TYPE: ${{ matrix.orocos_build_type }}
      ROS_PYTHON_VERSION: ${{ matrix.python_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install
        run: |
          sudo apt-get install libeigen3-dev libcppunit-dev
          pip install psutil future
      - name: Build orocos_kdl
        run: |
          cd orocos_kdl
          mkdir build
          cd build
          cmake -DENABLE_TESTS:BOOL=ON -DCMAKE_BUILD_TYPE=${OROCOS_KDL_BUILD_TYPE} ./..
          make
          sudo make install
      - name: Build PyKDL
        run: |
          cd python_orocos_kdl
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${OROCOS_KDL_BUILD_TYPE} ./..
          make
          sudo make install
      - name: ldconfig
        run: sudo ldconfig
      - name: Test orocos_kdl
        run: |
          cd orocos_kdl/build
          make check
      - name: Test PyKDL
        run: |
          cd python_orocos_kdl
          python_version_short=$(python -c "import sys; print('{}.{}'.format(sys.version_info[0], sys.version_info[1]))")
          export PYTHONPATH=/usr/local/lib/python${python_version_short}/dist-packages${PYTHONPATH:+:${PYTHONPATH}}
          python tests/PyKDLtest.py

  industrial_ci:
    name: Industrial CI - ${{ matrix.env.ROS_DISTRO }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - env:
              ROS_DISTRO: noetic
              ROS_REPO: ros
              ABICHECK_URL: github:orocos/orocos_kinematics_dynamics#release-1.5
              ABICHECK_MERGE: false
            branch: release-1.5
    env: ${{ matrix.env }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
        if: ${{ (github.event_name == 'push' && endsWith(github.ref, matrix.branch)) || (github.event_name == 'pull_request' && endsWith(github.base_ref, matrix.branch)) }}
      - uses: ros-industrial/industrial_ci@master
        env: ${{ matrix.env }}
        if: ${{ (github.event_name == 'push' && endsWith(github.ref, matrix.branch)) || (github.event_name == 'pull_request' && endsWith(github.base_ref, matrix.branch)) }}
